[tox]
minversion = 1.6
envlist = py{35,36,37}-{flake8,unit,unit-min,unitbase,bandit,prospector,sphinx}
skip_missing_interpreters = True

[testenv]
usedevelop = True
basepython =
    py37: python3.7
    py36: python3.6
    py35: python3.5
whitelist_externals = sed
description =
    flake8: Style consistency checker
    unit: Run unit tests
    unitbase: Run unit tests with base dependencies only
    bandit: Security-oriented static analyzer
    prospector: Static analysis multi-tool
    sphinx: Build documentation and manpages
    integration: Run integration tests
    min: [minimum supported version of dependencies]
    py37: (Python 3.7)
    py36: (Python 3.6)
    py35: (Python 3.5)
envdir = {toxworkdir}/py36-tests
commands =
    flake8: flake8 setup.py cumin doc
    unit: py.test -p no:logging --strict --cov-report=term-missing --cov=cumin cumin/tests/unit {posargs}
    unitbase: py.test -p no:logging --strict --cov-report=term-missing --cov=cumin --ignore=cumin/tests/unit/backends/test_openstack.py cumin/tests/unit {posargs}
    # Avoid bandit assert_used (B101) in tests
    bandit: bandit -l -i -r --exclude cumin/tests cumin/
    bandit: bandit -l -i -r --skip B101 cumin/tests
    prospector: prospector --profile "{toxinidir}/prospector.yaml" cumin/
    sphinx: python setup.py build_sphinx -b html
    sphinx: python setup.py build_sphinx -b man
    # Fix missing space after bold blocks in man page: https://github.com/ribozz/sphinx-argparse/issues/80
    sphinx: sed -i='' -e 's/^\.B/.B /' '{toxinidir}/doc/build/man/cumin.1'
    integration: "{toxinidir}/cumin/tests/integration/docker.sh" "transports/clustershell"
deps =
    # Use install_requires and the additional extras_require[tests] from setup.py, force the minimum version for
    # environments where 'min' is one of the dash-separated token.
    min: .[tests-min]
    .[tests]
setenv =
    min: CUMIN_MIN_DEPS=1
    integration: USER=root
    integration: SUDO_USER=integration-tests

# All the below are needed until https://github.com/tox-dev/tox/issues/659 is resolved
[testenv:py37-flake8]
envdir = {toxworkdir}/py37-tests

[testenv:py37-unit]
envdir = {toxworkdir}/py37-tests

[testenv:py37-unit-min]
envdir = {toxworkdir}/py37-tests-min

[testenv:py37-unitbase]
envdir = {toxworkdir}/py37-tests-base
deps = .[tests-base]

[testenv:py37-bandit]
envdir = {toxworkdir}/py37-tests

[testenv:py37-prospector]
envdir = {toxworkdir}/py37-tests

[testenv:py37-sphinx]
envdir = {toxworkdir}/py37-tests

[testenv:py37-integration]
envdir = {toxworkdir}/py37-tests

[testenv:py37-integration-min]
envdir = {toxworkdir}/py37-tests-min

[testenv:py36-unit-min]
envdir = {toxworkdir}/py36-tests-min

[testenv:py36-unitbase]
envdir = {toxworkdir}/py36-tests-base
deps = .[tests-base]

# Needed it until https://github.com/tox-dev/tox/issues/505 is resolved
[testenv:py36-integration]

[testenv:py36-integration-min]
envdir = {toxworkdir}/py36-tests-min

[testenv:py35-flake8]
envdir = {toxworkdir}/py35-tests

[testenv:py35-unit]
envdir = {toxworkdir}/py35-tests

[testenv:py35-unit-min]
envdir = {toxworkdir}/py35-tests-min

[testenv:py35-unitbase]
envdir = {toxworkdir}/py35-tests-base
deps = .[tests-base]

[testenv:py35-bandit]
envdir = {toxworkdir}/py35-tests

[testenv:py35-prospector]
envdir = {toxworkdir}/py35-tests

[testenv:py35-sphinx]
envdir = {toxworkdir}/py35-tests

[testenv:py35-integration]
envdir = {toxworkdir}/py35-tests

[testenv:py35-integration-min]
envdir = {toxworkdir}/py35-tests-min

[flake8]
max-line-length = 120
statistics = True
